// Generated by Dagger (https://dagger.dev).
package com.finpay.wallet.base;

import com.finpay.wallet.service.network.Api;
import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BaseViewModel_MembersInjector implements MembersInjector<BaseViewModel> {
  private final Provider<Api> apiProvider;

  private final Provider<DispatchingAndroidInjector<Object>> dispactchingActivityInjectorProvider;

  public BaseViewModel_MembersInjector(Provider<Api> apiProvider,
      Provider<DispatchingAndroidInjector<Object>> dispactchingActivityInjectorProvider) {
    this.apiProvider = apiProvider;
    this.dispactchingActivityInjectorProvider = dispactchingActivityInjectorProvider;
  }

  public static MembersInjector<BaseViewModel> create(Provider<Api> apiProvider,
      Provider<DispatchingAndroidInjector<Object>> dispactchingActivityInjectorProvider) {
    return new BaseViewModel_MembersInjector(apiProvider, dispactchingActivityInjectorProvider);
  }

  @Override
  public void injectMembers(BaseViewModel instance) {
    injectApi(instance, apiProvider.get());
    injectDispactchingActivityInjector(instance, dispactchingActivityInjectorProvider.get());
  }

  @InjectedFieldSignature("com.finpay.wallet.base.BaseViewModel.api")
  public static void injectApi(BaseViewModel instance, Api api) {
    instance.api = api;
  }

  @InjectedFieldSignature("com.finpay.wallet.base.BaseViewModel.dispactchingActivityInjector")
  public static void injectDispactchingActivityInjector(BaseViewModel instance,
      DispatchingAndroidInjector<Object> dispactchingActivityInjector) {
    instance.dispactchingActivityInjector = dispactchingActivityInjector;
  }
}
