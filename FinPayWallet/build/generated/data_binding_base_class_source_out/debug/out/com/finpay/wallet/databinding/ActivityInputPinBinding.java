// Generated by view binder compiler. Do not edit!
package com.finpay.wallet.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.finpay.wallet.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityInputPinBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView backButton;

  @NonNull
  public final TextView buttonForgotPin;

  @NonNull
  public final TextView fifthPinInput;

  @NonNull
  public final TextView firstPinInput;

  @NonNull
  public final TextView fourthPinInput;

  @NonNull
  public final LinearLayout oldPin;

  @NonNull
  public final TextView pinButton0Input;

  @NonNull
  public final TextView pinButton1Input;

  @NonNull
  public final TextView pinButton2Input;

  @NonNull
  public final TextView pinButton3Input;

  @NonNull
  public final TextView pinButton4Input;

  @NonNull
  public final TextView pinButton5Input;

  @NonNull
  public final TextView pinButton6Input;

  @NonNull
  public final TextView pinButton7Input;

  @NonNull
  public final TextView pinButton8Input;

  @NonNull
  public final TextView pinButton9Input;

  @NonNull
  public final ImageView pinButtonDelInput;

  @NonNull
  public final ImageView pinFingerprint;

  @NonNull
  public final TextView secondPinInput;

  @NonNull
  public final TextView sixthPinInput;

  @NonNull
  public final TextView thirdPinInput;

  private ActivityInputPinBinding(@NonNull LinearLayout rootView, @NonNull ImageView backButton,
      @NonNull TextView buttonForgotPin, @NonNull TextView fifthPinInput,
      @NonNull TextView firstPinInput, @NonNull TextView fourthPinInput,
      @NonNull LinearLayout oldPin, @NonNull TextView pinButton0Input,
      @NonNull TextView pinButton1Input, @NonNull TextView pinButton2Input,
      @NonNull TextView pinButton3Input, @NonNull TextView pinButton4Input,
      @NonNull TextView pinButton5Input, @NonNull TextView pinButton6Input,
      @NonNull TextView pinButton7Input, @NonNull TextView pinButton8Input,
      @NonNull TextView pinButton9Input, @NonNull ImageView pinButtonDelInput,
      @NonNull ImageView pinFingerprint, @NonNull TextView secondPinInput,
      @NonNull TextView sixthPinInput, @NonNull TextView thirdPinInput) {
    this.rootView = rootView;
    this.backButton = backButton;
    this.buttonForgotPin = buttonForgotPin;
    this.fifthPinInput = fifthPinInput;
    this.firstPinInput = firstPinInput;
    this.fourthPinInput = fourthPinInput;
    this.oldPin = oldPin;
    this.pinButton0Input = pinButton0Input;
    this.pinButton1Input = pinButton1Input;
    this.pinButton2Input = pinButton2Input;
    this.pinButton3Input = pinButton3Input;
    this.pinButton4Input = pinButton4Input;
    this.pinButton5Input = pinButton5Input;
    this.pinButton6Input = pinButton6Input;
    this.pinButton7Input = pinButton7Input;
    this.pinButton8Input = pinButton8Input;
    this.pinButton9Input = pinButton9Input;
    this.pinButtonDelInput = pinButtonDelInput;
    this.pinFingerprint = pinFingerprint;
    this.secondPinInput = secondPinInput;
    this.sixthPinInput = sixthPinInput;
    this.thirdPinInput = thirdPinInput;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityInputPinBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityInputPinBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_input_pin, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityInputPinBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backButton;
      ImageView backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.buttonForgotPin;
      TextView buttonForgotPin = ViewBindings.findChildViewById(rootView, id);
      if (buttonForgotPin == null) {
        break missingId;
      }

      id = R.id.fifthPinInput;
      TextView fifthPinInput = ViewBindings.findChildViewById(rootView, id);
      if (fifthPinInput == null) {
        break missingId;
      }

      id = R.id.firstPinInput;
      TextView firstPinInput = ViewBindings.findChildViewById(rootView, id);
      if (firstPinInput == null) {
        break missingId;
      }

      id = R.id.fourthPinInput;
      TextView fourthPinInput = ViewBindings.findChildViewById(rootView, id);
      if (fourthPinInput == null) {
        break missingId;
      }

      id = R.id.oldPin;
      LinearLayout oldPin = ViewBindings.findChildViewById(rootView, id);
      if (oldPin == null) {
        break missingId;
      }

      id = R.id.pinButton0Input;
      TextView pinButton0Input = ViewBindings.findChildViewById(rootView, id);
      if (pinButton0Input == null) {
        break missingId;
      }

      id = R.id.pinButton1Input;
      TextView pinButton1Input = ViewBindings.findChildViewById(rootView, id);
      if (pinButton1Input == null) {
        break missingId;
      }

      id = R.id.pinButton2Input;
      TextView pinButton2Input = ViewBindings.findChildViewById(rootView, id);
      if (pinButton2Input == null) {
        break missingId;
      }

      id = R.id.pinButton3Input;
      TextView pinButton3Input = ViewBindings.findChildViewById(rootView, id);
      if (pinButton3Input == null) {
        break missingId;
      }

      id = R.id.pinButton4Input;
      TextView pinButton4Input = ViewBindings.findChildViewById(rootView, id);
      if (pinButton4Input == null) {
        break missingId;
      }

      id = R.id.pinButton5Input;
      TextView pinButton5Input = ViewBindings.findChildViewById(rootView, id);
      if (pinButton5Input == null) {
        break missingId;
      }

      id = R.id.pinButton6Input;
      TextView pinButton6Input = ViewBindings.findChildViewById(rootView, id);
      if (pinButton6Input == null) {
        break missingId;
      }

      id = R.id.pinButton7Input;
      TextView pinButton7Input = ViewBindings.findChildViewById(rootView, id);
      if (pinButton7Input == null) {
        break missingId;
      }

      id = R.id.pinButton8Input;
      TextView pinButton8Input = ViewBindings.findChildViewById(rootView, id);
      if (pinButton8Input == null) {
        break missingId;
      }

      id = R.id.pinButton9Input;
      TextView pinButton9Input = ViewBindings.findChildViewById(rootView, id);
      if (pinButton9Input == null) {
        break missingId;
      }

      id = R.id.pinButtonDelInput;
      ImageView pinButtonDelInput = ViewBindings.findChildViewById(rootView, id);
      if (pinButtonDelInput == null) {
        break missingId;
      }

      id = R.id.pinFingerprint;
      ImageView pinFingerprint = ViewBindings.findChildViewById(rootView, id);
      if (pinFingerprint == null) {
        break missingId;
      }

      id = R.id.secondPinInput;
      TextView secondPinInput = ViewBindings.findChildViewById(rootView, id);
      if (secondPinInput == null) {
        break missingId;
      }

      id = R.id.sixthPinInput;
      TextView sixthPinInput = ViewBindings.findChildViewById(rootView, id);
      if (sixthPinInput == null) {
        break missingId;
      }

      id = R.id.thirdPinInput;
      TextView thirdPinInput = ViewBindings.findChildViewById(rootView, id);
      if (thirdPinInput == null) {
        break missingId;
      }

      return new ActivityInputPinBinding((LinearLayout) rootView, backButton, buttonForgotPin,
          fifthPinInput, firstPinInput, fourthPinInput, oldPin, pinButton0Input, pinButton1Input,
          pinButton2Input, pinButton3Input, pinButton4Input, pinButton5Input, pinButton6Input,
          pinButton7Input, pinButton8Input, pinButton9Input, pinButtonDelInput, pinFingerprint,
          secondPinInput, sixthPinInput, thirdPinInput);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
